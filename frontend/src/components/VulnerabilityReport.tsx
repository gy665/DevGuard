import React from 'react';
import { Typography, Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, Link, ChipProps } from '@mui/material';
import { Project, Vulnerability, Severity } from '../types'; 


// 3. Define the props for the component.
interface VulnerabilityReportProps {
  project: Project | null;
  vulnerabilities: Vulnerability[];
}

// 4. Create a typed map for severity colors to ensure we only use valid keys.
const severityColors: Record<Severity, ChipProps['color']> = {
  'Critical': 'error',
  'High': 'warning',
  'Medium': 'info',
  'Low': 'success'
};

const VulnerabilityReport: React.FC<VulnerabilityReportProps> = ({ project, vulnerabilities }) => {
  // This is the "empty state" of the component when no project is selected.
  if (!project) {
    return (
        <div className="flex items-center justify-center h-full">
            <Typography variant="h6" className="text-slate-400">
                Select a project to view its vulnerability report.
            </Typography>
        </div>
    );
  }

  // This is the main view when a project IS selected.
  return (
    <Box>
      <Typography variant="h4" gutterBottom className="text-white">
        {project.name}
      </Typography>

      <TableContainer>
        <Table sx={{ minWidth: 650 }}>
          <TableHead>
            <TableRow>
              <TableCell className="text-slate-300 border-b border-slate-600">Severity</TableCell>
              <TableCell className="text-slate-300 border-b border-slate-600">Package Name</TableCell>
              <TableCell className="text-slate-300 border-b border-slate-600">Vulnerable Version</TableCell>
              <TableCell className="text-slate-300 border-b border-slate-600">Description</TableCell>
              <TableCell className="text-slate-300 border-b border-slate-600">Details</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {vulnerabilities.length > 0 ? vulnerabilities.map((vuln) => (
              <TableRow key={vuln.id} hover sx={{ '&:hover': { backgroundColor: 'rgba(255, 255, 255, 0.05)' }}}>
                <TableCell className="border-b-0"><Chip label={vuln.severity} color={severityColors[vuln.severity]} size="small" /></TableCell>
                <TableCell className="text-slate-400 border-b-0">{vuln.name}</TableCell>
                <TableCell className="text-slate-400 border-b-0">{vuln.version}</TableCell>
                <TableCell className="text-slate-400 border-b-0">{vuln.description}</TableCell>
                <TableCell className="border-b-0"><Link href={vuln.detailsUrl} target="_blank">More Info</Link></TableCell>
              </TableRow>
            )) : (
              <TableRow>
                <TableCell colSpan={5} align="center" className="border-b-0">
                  <Typography sx={{ p: 2 }} className="text-slate-400">No vulnerabilities found for this project!</Typography>
                </TableCell>
              </TableRow>
            )}
          </TableBody>
        </Table>
      </TableContainer>
    </Box>
  );
};

export default VulnerabilityReport;